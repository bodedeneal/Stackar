<!DOCTYPE html>
<html>
<head>
  <title>AR Stack Game</title>
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <script src="https://cdn.jsdelivr.net/npm/three@0.152.2/build/three.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/three@0.152.2/examples/jsm/webxr/ARButton.js"></script>
  <style>
    body { margin: 0; overflow: hidden; }
    canvas { display: block; }
  </style>
</head>
<body>
  <script>
    let scene, camera, renderer, controller;
    let stack = [];
    let blockSize = 0.2;

    init();
    function init() {
      scene = new THREE.Scene();
      camera = new THREE.PerspectiveCamera();

      renderer = new THREE.WebGLRenderer({ antialias: true, alpha: true });
      renderer.setSize(window.innerWidth, window.innerHeight);
      renderer.xr.enabled = true;
      document.body.appendChild(renderer.domElement);
      document.body.appendChild(ARButton.createButton(renderer));

      const light = new THREE.HemisphereLight(0xffffff, 0xbbbbff, 1);
      scene.add(light);

      controller = renderer.xr.getController(0);
      controller.addEventListener('select', dropBlock);
      scene.add(controller);

      animate();
    }

    function dropBlock() {
      const y = stack.length * blockSize;
      const geometry = new THREE.BoxGeometry(blockSize, blockSize, blockSize);
      const material = new THREE.MeshStandardMaterial({ color: Math.random() * 0xffffff });
      const block = new THREE.Mesh(geometry, material);
      block.position.set(0, y, -0.5); // In front of camera
      scene.add(block);
      stack.push(block);
    }

    function animate() {
      renderer.setAnimationLoop(() => {
        renderer.render(scene, camera);
      });
    }
  </script>
</body>
</html>
